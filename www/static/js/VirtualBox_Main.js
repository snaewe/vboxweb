/* Copyright (C) 2009 Sun Microsystems, Inc.

 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:

 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Javascript classes for use with PrototypeJS/JSON.
 * This file is autogenerated from VirtualBox.xidl, DO NOT EDIT!
 */
var vboxIVirtualBoxErrorInfoImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getResultCode: function()
    {
        return this.jsonObject.resultCode;
    },
    getInterfaceID: function()
    {
        return this.jsonObject.interfaceID;
    },
    getComponent: function()
    {
        return this.jsonObject.component;
    },
    getText: function()
    {
        return this.jsonObject.text;
    },
    getNext: function()
    {
        return this.jsonObject.next;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVirtualBoxCallbackImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIDHCPServerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getIPAddress: function()
    {
        return this.jsonObject.IPAddress;
    },
    getNetworkMask: function()
    {
        return this.jsonObject.networkMask;
    },
    getNetworkName: function()
    {
        return this.jsonObject.networkName;
    },
    getLowerIP: function()
    {
        return this.jsonObject.lowerIP;
    },
    getUpperIP: function()
    {
        return this.jsonObject.upperIP;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVirtualBoxImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getVersion: function()
    {
        return this.jsonObject.version;
    },
    getRevision: function()
    {
        return this.jsonObject.revision;
    },
    getPackageType: function()
    {
        return this.jsonObject.packageType;
    },
    getHomeFolder: function()
    {
        return this.jsonObject.homeFolder;
    },
    getSettingsFilePath: function()
    {
        return this.jsonObject.settingsFilePath;
    },
    getSettingsFileVersion: function()
    {
        return this.jsonObject.settingsFileVersion;
    },
    getSettingsFormatVersion: function()
    {
        return this.jsonObject.settingsFormatVersion;
    },
    getHost: function()
    {
        return this.jsonObject.host;
    },
    getSystemProperties: function()
    {
        return this.jsonObject.systemProperties;
    },
    getMachines: function()
    {
        return this.jsonObject.machines;
    },
    getHardDisks: function()
    {
        return this.jsonObject.hardDisks;
    },
    getDVDImages: function()
    {
        return this.jsonObject.DVDImages;
    },
    getFloppyImages: function()
    {
        return this.jsonObject.floppyImages;
    },
    getProgressOperations: function()
    {
        return this.jsonObject.progressOperations;
    },
    getGuestOSTypes: function()
    {
        return this.jsonObject.guestOSTypes;
    },
    getSharedFolders: function()
    {
        return this.jsonObject.sharedFolders;
    },
    getPerformanceCollector: function()
    {
        return this.jsonObject.performanceCollector;
    },
    getDHCPServers: function()
    {
        return this.jsonObject.DHCPServers;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVFSExplorerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getPath: function()
    {
        return this.jsonObject.path;
    },
    getType: function()
    {
        return this.jsonObject.type;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIApplianceImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getPath: function()
    {
        return this.jsonObject.path;
    },
    getDisks: function()
    {
        return this.jsonObject.disks;
    },
    getVirtualSystemDescriptions: function()
    {
        return this.jsonObject.virtualSystemDescriptions;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVirtualSystemDescriptionImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getCount: function()
    {
        return this.jsonObject.count;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIInternalMachineControlImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIBIOSSettingsImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getLogoFadeIn: function()
    {
        return this.jsonObject.logoFadeIn;
    },
    getLogoFadeOut: function()
    {
        return this.jsonObject.logoFadeOut;
    },
    getLogoDisplayTime: function()
    {
        return this.jsonObject.logoDisplayTime;
    },
    getLogoImagePath: function()
    {
        return this.jsonObject.logoImagePath;
    },
    getBootMenuMode: function()
    {
        return this.jsonObject.bootMenuMode;
    },
    getACPIEnabled: function()
    {
        return this.jsonObject.ACPIEnabled;
    },
    getIOAPICEnabled: function()
    {
        return this.jsonObject.IOAPICEnabled;
    },
    getTimeOffset: function()
    {
        return this.jsonObject.timeOffset;
    },
    getPXEDebugEnabled: function()
    {
        return this.jsonObject.PXEDebugEnabled;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIMachineImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getParent: function()
    {
        return this.jsonObject.parent;
    },
    getAccessible: function()
    {
        return this.jsonObject.accessible;
    },
    getAccessError: function()
    {
        return this.jsonObject.accessError;
    },
    getName: function()
    {
        return this.jsonObject.name;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getId: function()
    {
        return this.jsonObject.id;
    },
    getOSTypeId: function()
    {
        return this.jsonObject.OSTypeId;
    },
    getHardwareVersion: function()
    {
        return this.jsonObject.HardwareVersion;
    },
    getCPUCount: function()
    {
        return this.jsonObject.CPUCount;
    },
    getMemorySize: function()
    {
        return this.jsonObject.memorySize;
    },
    getMemoryBalloonSize: function()
    {
        return this.jsonObject.memoryBalloonSize;
    },
    getStatisticsUpdateInterval: function()
    {
        return this.jsonObject.statisticsUpdateInterval;
    },
    getVRAMSize: function()
    {
        return this.jsonObject.VRAMSize;
    },
    getAccelerate3DEnabled: function()
    {
        return this.jsonObject.accelerate3DEnabled;
    },
    getMonitorCount: function()
    {
        return this.jsonObject.monitorCount;
    },
    getBIOSSettings: function()
    {
        return this.jsonObject.BIOSSettings;
    },
    getHWVirtExEnabled: function()
    {
        return this.jsonObject.HWVirtExEnabled;
    },
    getHWVirtExNestedPagingEnabled: function()
    {
        return this.jsonObject.HWVirtExNestedPagingEnabled;
    },
    getHWVirtExVPIDEnabled: function()
    {
        return this.jsonObject.HWVirtExVPIDEnabled;
    },
    getPAEEnabled: function()
    {
        return this.jsonObject.PAEEnabled;
    },
    getSnapshotFolder: function()
    {
        return this.jsonObject.snapshotFolder;
    },
    getVRDPServer: function()
    {
        return this.jsonObject.VRDPServer;
    },
    getHardDiskAttachments: function()
    {
        return this.jsonObject.hardDiskAttachments;
    },
    getDVDDrive: function()
    {
        return this.jsonObject.DVDDrive;
    },
    getFloppyDrive: function()
    {
        return this.jsonObject.floppyDrive;
    },
    getUSBController: function()
    {
        return this.jsonObject.USBController;
    },
    getAudioAdapter: function()
    {
        return this.jsonObject.audioAdapter;
    },
    getStorageControllers: function()
    {
        return this.jsonObject.storageControllers;
    },
    getSettingsFilePath: function()
    {
        return this.jsonObject.settingsFilePath;
    },
    getSettingsFileVersion: function()
    {
        return this.jsonObject.settingsFileVersion;
    },
    getSettingsModified: function()
    {
        return this.jsonObject.settingsModified;
    },
    getSessionState: function()
    {
        return this.jsonObject.sessionState;
    },
    getSessionType: function()
    {
        return this.jsonObject.sessionType;
    },
    getSessionPid: function()
    {
        return this.jsonObject.sessionPid;
    },
    getState: function()
    {
        return this.jsonObject.state;
    },
    getLastStateChange: function()
    {
        return this.jsonObject.lastStateChange;
    },
    getStateFilePath: function()
    {
        return this.jsonObject.stateFilePath;
    },
    getLogFolder: function()
    {
        return this.jsonObject.logFolder;
    },
    getCurrentSnapshot: function()
    {
        return this.jsonObject.currentSnapshot;
    },
    getSnapshotCount: function()
    {
        return this.jsonObject.snapshotCount;
    },
    getCurrentStateModified: function()
    {
        return this.jsonObject.currentStateModified;
    },
    getSharedFolders: function()
    {
        return this.jsonObject.sharedFolders;
    },
    getClipboardMode: function()
    {
        return this.jsonObject.clipboardMode;
    },
    getGuestPropertyNotificationPatterns: function()
    {
        return this.jsonObject.guestPropertyNotificationPatterns;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIConsoleCallbackImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIRemoteDisplayInfoImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getActive: function()
    {
        return this.jsonObject.active;
    },
    getNumberOfClients: function()
    {
        return this.jsonObject.numberOfClients;
    },
    getBeginTime: function()
    {
        return this.jsonObject.beginTime;
    },
    getEndTime: function()
    {
        return this.jsonObject.endTime;
    },
    getBytesSent: function()
    {
        return this.jsonObject.bytesSent;
    },
    getBytesSentTotal: function()
    {
        return this.jsonObject.bytesSentTotal;
    },
    getBytesReceived: function()
    {
        return this.jsonObject.bytesReceived;
    },
    getBytesReceivedTotal: function()
    {
        return this.jsonObject.bytesReceivedTotal;
    },
    getUser: function()
    {
        return this.jsonObject.user;
    },
    getDomain: function()
    {
        return this.jsonObject.domain;
    },
    getClientName: function()
    {
        return this.jsonObject.clientName;
    },
    getClientIP: function()
    {
        return this.jsonObject.clientIP;
    },
    getClientVersion: function()
    {
        return this.jsonObject.clientVersion;
    },
    getEncryptionStyle: function()
    {
        return this.jsonObject.encryptionStyle;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIConsoleImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getMachine: function()
    {
        return this.jsonObject.machine;
    },
    getState: function()
    {
        return this.jsonObject.state;
    },
    getGuest: function()
    {
        return this.jsonObject.guest;
    },
    getKeyboard: function()
    {
        return this.jsonObject.keyboard;
    },
    getMouse: function()
    {
        return this.jsonObject.mouse;
    },
    getDisplay: function()
    {
        return this.jsonObject.display;
    },
    getDebugger: function()
    {
        return this.jsonObject.debugger;
    },
    getUSBDevices: function()
    {
        return this.jsonObject.USBDevices;
    },
    getRemoteUSBDevices: function()
    {
        return this.jsonObject.remoteUSBDevices;
    },
    getSharedFolders: function()
    {
        return this.jsonObject.sharedFolders;
    },
    getRemoteDisplayInfo: function()
    {
        return this.jsonObject.remoteDisplayInfo;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostDVDDriveImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getUdi: function()
    {
        return this.jsonObject.udi;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostFloppyDriveImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getUdi: function()
    {
        return this.jsonObject.udi;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostNetworkInterfaceImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getId: function()
    {
        return this.jsonObject.id;
    },
    getNetworkName: function()
    {
        return this.jsonObject.networkName;
    },
    getDhcpEnabled: function()
    {
        return this.jsonObject.dhcpEnabled;
    },
    getIPAddress: function()
    {
        return this.jsonObject.IPAddress;
    },
    getNetworkMask: function()
    {
        return this.jsonObject.networkMask;
    },
    getIPV6Supported: function()
    {
        return this.jsonObject.IPV6Supported;
    },
    getIPV6Address: function()
    {
        return this.jsonObject.IPV6Address;
    },
    getIPV6NetworkMaskPrefixLength: function()
    {
        return this.jsonObject.IPV6NetworkMaskPrefixLength;
    },
    getHardwareAddress: function()
    {
        return this.jsonObject.hardwareAddress;
    },
    getMediumType: function()
    {
        return this.jsonObject.mediumType;
    },
    getStatus: function()
    {
        return this.jsonObject.status;
    },
    getInterfaceType: function()
    {
        return this.jsonObject.interfaceType;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getDVDDrives: function()
    {
        return this.jsonObject.DVDDrives;
    },
    getFloppyDrives: function()
    {
        return this.jsonObject.floppyDrives;
    },
    getUSBDevices: function()
    {
        return this.jsonObject.USBDevices;
    },
    getUSBDeviceFilters: function()
    {
        return this.jsonObject.USBDeviceFilters;
    },
    getNetworkInterfaces: function()
    {
        return this.jsonObject.networkInterfaces;
    },
    getProcessorCount: function()
    {
        return this.jsonObject.processorCount;
    },
    getProcessorOnlineCount: function()
    {
        return this.jsonObject.processorOnlineCount;
    },
    getMemorySize: function()
    {
        return this.jsonObject.memorySize;
    },
    getMemoryAvailable: function()
    {
        return this.jsonObject.memoryAvailable;
    },
    getOperatingSystem: function()
    {
        return this.jsonObject.operatingSystem;
    },
    getOSVersion: function()
    {
        return this.jsonObject.OSVersion;
    },
    getUTCTime: function()
    {
        return this.jsonObject.UTCTime;
    },
    getAcceleration3DAvailable: function()
    {
        return this.jsonObject.Acceleration3DAvailable;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISystemPropertiesImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getMinGuestRAM: function()
    {
        return this.jsonObject.minGuestRAM;
    },
    getMaxGuestRAM: function()
    {
        return this.jsonObject.maxGuestRAM;
    },
    getMinGuestVRAM: function()
    {
        return this.jsonObject.minGuestVRAM;
    },
    getMaxGuestVRAM: function()
    {
        return this.jsonObject.maxGuestVRAM;
    },
    getMinGuestCPUCount: function()
    {
        return this.jsonObject.minGuestCPUCount;
    },
    getMaxGuestCPUCount: function()
    {
        return this.jsonObject.maxGuestCPUCount;
    },
    getMaxVDISize: function()
    {
        return this.jsonObject.maxVDISize;
    },
    getNetworkAdapterCount: function()
    {
        return this.jsonObject.networkAdapterCount;
    },
    getSerialPortCount: function()
    {
        return this.jsonObject.serialPortCount;
    },
    getParallelPortCount: function()
    {
        return this.jsonObject.parallelPortCount;
    },
    getMaxBootPosition: function()
    {
        return this.jsonObject.maxBootPosition;
    },
    getDefaultMachineFolder: function()
    {
        return this.jsonObject.defaultMachineFolder;
    },
    getDefaultHardDiskFolder: function()
    {
        return this.jsonObject.defaultHardDiskFolder;
    },
    getHardDiskFormats: function()
    {
        return this.jsonObject.hardDiskFormats;
    },
    getDefaultHardDiskFormat: function()
    {
        return this.jsonObject.defaultHardDiskFormat;
    },
    getRemoteDisplayAuthLibrary: function()
    {
        return this.jsonObject.remoteDisplayAuthLibrary;
    },
    getWebServiceAuthLibrary: function()
    {
        return this.jsonObject.webServiceAuthLibrary;
    },
    getLogHistoryCount: function()
    {
        return this.jsonObject.LogHistoryCount;
    },
    getDefaultAudioDriver: function()
    {
        return this.jsonObject.defaultAudioDriver;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIGuestOSTypeImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getFamilyId: function()
    {
        return this.jsonObject.familyId;
    },
    getFamilyDescription: function()
    {
        return this.jsonObject.familyDescription;
    },
    getId: function()
    {
        return this.jsonObject.id;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getIs64Bit: function()
    {
        return this.jsonObject.is64Bit;
    },
    getRecommendedIOAPIC: function()
    {
        return this.jsonObject.recommendedIOAPIC;
    },
    getRecommendedVirtEx: function()
    {
        return this.jsonObject.recommendedVirtEx;
    },
    getRecommendedRAM: function()
    {
        return this.jsonObject.recommendedRAM;
    },
    getRecommendedVRAM: function()
    {
        return this.jsonObject.recommendedVRAM;
    },
    getRecommendedHDD: function()
    {
        return this.jsonObject.recommendedHDD;
    },
    getAdapterType: function()
    {
        return this.jsonObject.adapterType;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIGuestImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getOSTypeId: function()
    {
        return this.jsonObject.OSTypeId;
    },
    getAdditionsActive: function()
    {
        return this.jsonObject.additionsActive;
    },
    getAdditionsVersion: function()
    {
        return this.jsonObject.additionsVersion;
    },
    getSupportsSeamless: function()
    {
        return this.jsonObject.supportsSeamless;
    },
    getSupportsGraphics: function()
    {
        return this.jsonObject.supportsGraphics;
    },
    getMemoryBalloonSize: function()
    {
        return this.jsonObject.memoryBalloonSize;
    },
    getStatisticsUpdateInterval: function()
    {
        return this.jsonObject.statisticsUpdateInterval;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIProgressImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getId: function()
    {
        return this.jsonObject.id;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getInitiator: function()
    {
        return this.jsonObject.initiator;
    },
    getCancelable: function()
    {
        return this.jsonObject.cancelable;
    },
    getPercent: function()
    {
        return this.jsonObject.percent;
    },
    getTimeRemaining: function()
    {
        return this.jsonObject.timeRemaining;
    },
    getCompleted: function()
    {
        return this.jsonObject.completed;
    },
    getCanceled: function()
    {
        return this.jsonObject.canceled;
    },
    getResultCode: function()
    {
        return this.jsonObject.resultCode;
    },
    getErrorInfo: function()
    {
        return this.jsonObject.errorInfo;
    },
    getOperationCount: function()
    {
        return this.jsonObject.operationCount;
    },
    getOperation: function()
    {
        return this.jsonObject.operation;
    },
    getOperationDescription: function()
    {
        return this.jsonObject.operationDescription;
    },
    getOperationPercent: function()
    {
        return this.jsonObject.operationPercent;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISnapshotImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getId: function()
    {
        return this.jsonObject.id;
    },
    getName: function()
    {
        return this.jsonObject.name;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getTimeStamp: function()
    {
        return this.jsonObject.timeStamp;
    },
    getOnline: function()
    {
        return this.jsonObject.online;
    },
    getMachine: function()
    {
        return this.jsonObject.machine;
    },
    getParent: function()
    {
        return this.jsonObject.parent;
    },
    getChildren: function()
    {
        return this.jsonObject.children;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIMediumImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getId: function()
    {
        return this.jsonObject.id;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getState: function()
    {
        return this.jsonObject.state;
    },
    getLocation: function()
    {
        return this.jsonObject.location;
    },
    getName: function()
    {
        return this.jsonObject.name;
    },
    getSize: function()
    {
        return this.jsonObject.size;
    },
    getLastAccessError: function()
    {
        return this.jsonObject.lastAccessError;
    },
    getMachineIds: function()
    {
        return this.jsonObject.machineIds;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHardDiskAttachmentImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getHardDisk: function()
    {
        return this.jsonObject.hardDisk;
    },
    getController: function()
    {
        return this.jsonObject.controller;
    },
    getPort: function()
    {
        return this.jsonObject.port;
    },
    getDevice: function()
    {
        return this.jsonObject.device;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHardDiskImpl = Class.create(vboxIMediumImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getFormat: function()
    {
        return this.jsonObject.format;
    },
    getType: function()
    {
        return this.jsonObject.type;
    },
    getParent: function()
    {
        return this.jsonObject.parent;
    },
    getChildren: function()
    {
        return this.jsonObject.children;
    },
    getRoot: function()
    {
        return this.jsonObject.root;
    },
    getReadOnly: function()
    {
        return this.jsonObject.readOnly;
    },
    getLogicalSize: function()
    {
        return this.jsonObject.logicalSize;
    },
    getAutoReset: function()
    {
        return this.jsonObject.autoReset;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHardDiskFormatImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getId: function()
    {
        return this.jsonObject.id;
    },
    getName: function()
    {
        return this.jsonObject.name;
    },
    getFileExtensions: function()
    {
        return this.jsonObject.fileExtensions;
    },
    getCapabilities: function()
    {
        return this.jsonObject.capabilities;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIFloppyImageImpl = Class.create(vboxIMediumImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIDVDImageImpl = Class.create(vboxIMediumImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIDVDDriveImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getState: function()
    {
        return this.jsonObject.state;
    },
    getPassthrough: function()
    {
        return this.jsonObject.passthrough;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIFloppyDriveImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getState: function()
    {
        return this.jsonObject.state;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIKeyboardImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIMouseImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getAbsoluteSupported: function()
    {
        return this.jsonObject.absoluteSupported;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIFramebufferImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getAddress: function()
    {
        return this.jsonObject.address;
    },
    getWidth: function()
    {
        return this.jsonObject.width;
    },
    getHeight: function()
    {
        return this.jsonObject.height;
    },
    getBitsPerPixel: function()
    {
        return this.jsonObject.bitsPerPixel;
    },
    getBytesPerLine: function()
    {
        return this.jsonObject.bytesPerLine;
    },
    getPixelFormat: function()
    {
        return this.jsonObject.pixelFormat;
    },
    getUsesGuestVRAM: function()
    {
        return this.jsonObject.usesGuestVRAM;
    },
    getHeightReduction: function()
    {
        return this.jsonObject.heightReduction;
    },
    getOverlay: function()
    {
        return this.jsonObject.overlay;
    },
    getWinId: function()
    {
        return this.jsonObject.winId;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIFramebufferOverlayImpl = Class.create(vboxIFramebufferImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getX: function()
    {
        return this.jsonObject.x;
    },
    getY: function()
    {
        return this.jsonObject.y;
    },
    getVisible: function()
    {
        return this.jsonObject.visible;
    },
    getAlpha: function()
    {
        return this.jsonObject.alpha;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIDisplayImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getWidth: function()
    {
        return this.jsonObject.width;
    },
    getHeight: function()
    {
        return this.jsonObject.height;
    },
    getBitsPerPixel: function()
    {
        return this.jsonObject.bitsPerPixel;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxINetworkAdapterImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getAdapterType: function()
    {
        return this.jsonObject.adapterType;
    },
    getSlot: function()
    {
        return this.jsonObject.slot;
    },
    getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getMACAddress: function()
    {
        return this.jsonObject.MACAddress;
    },
    getAttachmentType: function()
    {
        return this.jsonObject.attachmentType;
    },
    getHostInterface: function()
    {
        return this.jsonObject.hostInterface;
    },
    getInternalNetwork: function()
    {
        return this.jsonObject.internalNetwork;
    },
    getNATNetwork: function()
    {
        return this.jsonObject.NATNetwork;
    },
    getCableConnected: function()
    {
        return this.jsonObject.cableConnected;
    },
    getLineSpeed: function()
    {
        return this.jsonObject.lineSpeed;
    },
    getTraceEnabled: function()
    {
        return this.jsonObject.traceEnabled;
    },
    getTraceFile: function()
    {
        return this.jsonObject.traceFile;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISerialPortImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getSlot: function()
    {
        return this.jsonObject.slot;
    },
    getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getIOBase: function()
    {
        return this.jsonObject.IOBase;
    },
    getIRQ: function()
    {
        return this.jsonObject.IRQ;
    },
    getHostMode: function()
    {
        return this.jsonObject.hostMode;
    },
    getServer: function()
    {
        return this.jsonObject.server;
    },
    getPath: function()
    {
        return this.jsonObject.path;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIParallelPortImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getSlot: function()
    {
        return this.jsonObject.slot;
    },
    getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getIOBase: function()
    {
        return this.jsonObject.IOBase;
    },
    getIRQ: function()
    {
        return this.jsonObject.IRQ;
    },
    getPath: function()
    {
        return this.jsonObject.path;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIMachineDebuggerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getSinglestep: function()
    {
        return this.jsonObject.singlestep;
    },
    getRecompileUser: function()
    {
        return this.jsonObject.recompileUser;
    },
    getRecompileSupervisor: function()
    {
        return this.jsonObject.recompileSupervisor;
    },
    getPATMEnabled: function()
    {
        return this.jsonObject.PATMEnabled;
    },
    getCSAMEnabled: function()
    {
        return this.jsonObject.CSAMEnabled;
    },
    getLogEnabled: function()
    {
        return this.jsonObject.logEnabled;
    },
    getHWVirtExEnabled: function()
    {
        return this.jsonObject.HWVirtExEnabled;
    },
    getHWVirtExNestedPagingEnabled: function()
    {
        return this.jsonObject.HWVirtExNestedPagingEnabled;
    },
    getHWVirtExVPIDEnabled: function()
    {
        return this.jsonObject.HWVirtExVPIDEnabled;
    },
    getPAEEnabled: function()
    {
        return this.jsonObject.PAEEnabled;
    },
    getVirtualTimeRate: function()
    {
        return this.jsonObject.virtualTimeRate;
    },
    getVM: function()
    {
        return this.jsonObject.VM;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIUSBControllerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getEnabledEhci: function()
    {
        return this.jsonObject.enabledEhci;
    },
    getUSBStandard: function()
    {
        return this.jsonObject.USBStandard;
    },
    getDeviceFilters: function()
    {
        return this.jsonObject.deviceFilters;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIUSBDeviceImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getId: function()
    {
        return this.jsonObject.id;
    },
    getVendorId: function()
    {
        return this.jsonObject.vendorId;
    },
    getProductId: function()
    {
        return this.jsonObject.productId;
    },
    getRevision: function()
    {
        return this.jsonObject.revision;
    },
    getManufacturer: function()
    {
        return this.jsonObject.manufacturer;
    },
    getProduct: function()
    {
        return this.jsonObject.product;
    },
    getSerialNumber: function()
    {
        return this.jsonObject.serialNumber;
    },
    getAddress: function()
    {
        return this.jsonObject.address;
    },
    getPort: function()
    {
        return this.jsonObject.port;
    },
    getVersion: function()
    {
        return this.jsonObject.version;
    },
    getPortVersion: function()
    {
        return this.jsonObject.portVersion;
    },
    getRemote: function()
    {
        return this.jsonObject.remote;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIUSBDeviceFilterImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getActive: function()
    {
        return this.jsonObject.active;
    },
    getVendorId: function()
    {
        return this.jsonObject.vendorId;
    },
    getProductId: function()
    {
        return this.jsonObject.productId;
    },
    getRevision: function()
    {
        return this.jsonObject.revision;
    },
    getManufacturer: function()
    {
        return this.jsonObject.manufacturer;
    },
    getProduct: function()
    {
        return this.jsonObject.product;
    },
    getSerialNumber: function()
    {
        return this.jsonObject.serialNumber;
    },
    getPort: function()
    {
        return this.jsonObject.port;
    },
    getRemote: function()
    {
        return this.jsonObject.remote;
    },
    getMaskedInterfaces: function()
    {
        return this.jsonObject.maskedInterfaces;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostUSBDeviceImpl = Class.create(vboxIUSBDeviceImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getState: function()
    {
        return this.jsonObject.state;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIHostUSBDeviceFilterImpl = Class.create(vboxIUSBDeviceFilterImpl,
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getAction: function()
    {
        return this.jsonObject.action;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIAudioAdapterImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getAudioController: function()
    {
        return this.jsonObject.audioController;
    },
    getAudioDriver: function()
    {
        return this.jsonObject.audioDriver;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVRDPServerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getEnabled: function()
    {
        return this.jsonObject.enabled;
    },
    getPort: function()
    {
        return this.jsonObject.port;
    },
    getNetAddress: function()
    {
        return this.jsonObject.netAddress;
    },
    getAuthType: function()
    {
        return this.jsonObject.authType;
    },
    getAuthTimeout: function()
    {
        return this.jsonObject.authTimeout;
    },
    getAllowMultiConnection: function()
    {
        return this.jsonObject.allowMultiConnection;
    },
    getReuseSingleConnection: function()
    {
        return this.jsonObject.reuseSingleConnection;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISharedFolderImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getHostPath: function()
    {
        return this.jsonObject.hostPath;
    },
    getAccessible: function()
    {
        return this.jsonObject.accessible;
    },
    getWritable: function()
    {
        return this.jsonObject.writable;
    },
    getLastAccessError: function()
    {
        return this.jsonObject.lastAccessError;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIInternalSessionControlImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISessionImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getState: function()
    {
        return this.jsonObject.state;
    },
    getType: function()
    {
        return this.jsonObject.type;
    },
    getMachine: function()
    {
        return this.jsonObject.machine;
    },
    getConsole: function()
    {
        return this.jsonObject.console;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIStorageControllerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getName: function()
    {
        return this.jsonObject.name;
    },
    getMaxDevicesPerPortCount: function()
    {
        return this.jsonObject.maxDevicesPerPortCount;
    },
    getMinPortCount: function()
    {
        return this.jsonObject.minPortCount;
    },
    getMaxPortCount: function()
    {
        return this.jsonObject.maxPortCount;
    },
    getInstance: function()
    {
        return this.jsonObject.instance;
    },
    getPortCount: function()
    {
        return this.jsonObject.portCount;
    },
    getBus: function()
    {
        return this.jsonObject.bus;
    },
    getControllerType: function()
    {
        return this.jsonObject.controllerType;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIManagedObjectRefImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIWebsessionManagerImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIPerformanceMetricImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getMetricName: function()
    {
        return this.jsonObject.metricName;
    },
    getObject: function()
    {
        return this.jsonObject.object;
    },
    getDescription: function()
    {
        return this.jsonObject.description;
    },
    getPeriod: function()
    {
        return this.jsonObject.period;
    },
    getCount: function()
    {
        return this.jsonObject.count;
    },
    getUnit: function()
    {
        return this.jsonObject.unit;
    },
    getMinimumValue: function()
    {
        return this.jsonObject.minimumValue;
    },
    getMaximumValue: function()
    {
        return this.jsonObject.maximumValue;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIPerformanceCollectorImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
        getMetricNames: function()
    {
        return this.jsonObject.metricNames;
    },

    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxIVirtualBoxImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

var vboxISessionImpl = Class.create(
{
    initialize: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    },
    
    
    loadSettingsJSON: function(jsonObject)
    {
        this.jsonObject = jsonObject;
    }
    
});

